name: Java CI with Multi-Job Pipeline

on:
  push:
    branches: [ master ]


permissions:
  contents: read
  packages: write
  checks: write
  pull-requests: write

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven Packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    - name: Clean project
      run: mvn clean

    - name: Upload source for other jobs
    
      uses: actions/upload-artifact@v3
    - run: ls -lR
      with:
        name: source-code
        
        path: |
         pom.xml
         /src

  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - name: Download source
      uses: actions/download-artifact@v3
      with:
        name: source-code

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Compile
      run: mvn compile

    - name: Upload target for next jobs
      uses: actions/upload-artifact@v3
      with:
        name: target-compiled
        path: target/

  Test:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: source-code

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'

    - name: Run tests
      run: mvn test

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: target/surefire-reports/*.xml

  Coverage:
    runs-on: ubuntu-latest
    needs: Test
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: source-code

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'

    - name: Generate JaCoCo report
      run: mvn jacoco:report

  # Sonar:
  #   runs-on: ubuntu-latest
  #   needs: Coverage
  #   steps:
  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: source-code

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'

  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@v2
  #     with:
  #       projectBaseDir: .
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       SONAR_PROJECT_KEY: your-org_your-project
  #       SONAR_ORGANIZATION: your-org

  Package:
    runs-on: ubuntu-latest
    needs: Test
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: source-code

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'

    - name: Package WAR
      run: mvn package

    - name: Upload WAR
      uses: actions/upload-artifact@v3
      with:
        name: war-file
        path: target/*.war

  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: Package
  #   steps:
  #   - name: Download WAR
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: war-file

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'

  #   - name: Deploy WAR to GitHub Packages
  #     run: mvn deploy
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
